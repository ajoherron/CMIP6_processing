#!/bin/bash

##########################
### USER-SET VARIABLES ###
##########################

# Run
runs=("E07TomaVArF40oQ40")

# Time range
year_start="1850"
year_end="2014"

# ZOS Numbers
zos_1="-0.1683461"
zos_2="4.1561201E-04"

##############################
### Automatic CMOR Process ###
##############################

# Set output file
output_file="/discover/nobackup/aherron1/CMOR3.3.2/cmor_progress.txt"

# Clear progress file without removing
true >"$output_file"

# Initialize empty string to store CMOR commands
command_array=()

# Set script type
script_type="CMOR"

# Record the start time
start_time=$(date "+%s")

# Add CMOR and proc_cmip6 directories to the PATH
export PATH="/discover/nobackup/aherron1/CMOR3.3.2:$PATH"
export PATH="/discover/nobackup/aherron1/proc_cmip6:$PATH"

cmor_time_periods() {
    local year_start="$1"
    local year_end="$2"
    local run="$3"
    local variable="$4"

    # Loop through each 5-year interval
    for ((interval_start = year_start; interval_start <= year_end; interval_start += 5)); do
        interval_end=$((interval_start + 4))

        # Ensure the interval_end does not exceed year_end
        if [ "$interval_end" -gt "$year_end" ]; then
            interval_end="$year_end"
        fi

        # Calculate 12 * year_range
        year_range=$((interval_end - interval_start + 1))
        time_periods=$((12 * year_range))

        # Create command, add to array of commands
        command="master_cmor3.ksh $run $variable $time_periods $interval_start $interval_end $year_start"
        command_array+=("$command")

    done
}

# Initialize string for details of each run's CMOR process
details=""

# Loop through each run
for run in "${runs[@]}"; do

    # Set run type extract script based on the prefix
    case "$run" in
    E213*) atmosphere_var="nint" ;;
    E06*) atmosphere_var="nint102" ;;
    E212*) atmosphere_var="oma" ;;
    E07*) atmosphere_var="oma102" ;;
    *)
        echo "Error: Unknown prefix. No extraction script found." >>$output_file
        exit 1
        ;;
    esac

    # Atmospheric variables for E2.1 NINT
    if [ "$atmosphere_var" == "nint" ]; then
        cmor_time_periods "$year_start" "$year_end" "$run" "nint"

    # Atmospheric variables for E2.2 NINT
    elif [ "$atmosphere_var" == "nint102" ]; then
        cmor_time_periods "$year_start" "$year_end" "$run" "nint102"

    # Atmospheric variables for E2.1 OMA
    elif [ "$atmosphere_var" == "oma" ]; then
        cmor_time_periods "$year_start" "$year_end" "$run" "tcadiOma"
        cmor_time_periods "$year_start" "$year_end" "$run" "taijlOma"

    # Atmospheric variables for E2.2 OMA
    elif [ "$atmosphere_var" == "oma102" ]; then
        cmor_time_periods "$year_start" "$year_end" "$run" "tcadiOma102"
        cmor_time_periods "$year_start" "$year_end" "$run" "taijlOma102"

    else
        echo "Error: Unknown atmosphere_var. No corresponding code found." >>"$output_file"
        exit 1
    fi

    # Run oceanic commands
    cmor_time_periods "$year_start" "$year_end" "$run" "oijl"

    # Calculate total time periods
    time_range=$((year_end - year_start + 1))
    total_time_periods=$((time_range * 12))

    # ZOS command (should be constant / 1 line)
    command_array+=("master_cmor3.ksh $run zos $total_time_periods $year_start $year_end $year_start $zos_1 $zos_2")

    # Extra variables
    command_array+=("cd /discover/nobackup/aherron1/proc_cmip6")
    command_array+=("reformat_cmip6_extra.ksh $run $year_start $year_end $total_time_periods")
    command_array+=("cd /discover/nobackup/aherron1/CMOR3.3.2")

done

# Print all CMOR commands
echo -e "\nAll CMOR commands:\n" >>$output_file
for command in "${command_array[@]}"; do
    timestamp=$(date "+%Y-%m-%d %H:%M:%S")
    echo "[$timestamp] $command" >>$output_file
    details+="$command\n"

    # Comment out this line to test commands before running
    eval "$command"
done

# Get rid of unfixable variables using automatic script
/discover/nobackup/aherron1/automation/remove_unfixable_variables.sh

# Send automatic email
python /discover/nobackup/aherron1/automation/send_email.py "$start_time" "$details" "$script_type"
