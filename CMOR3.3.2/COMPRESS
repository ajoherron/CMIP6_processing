#!/bin/ksh

###################################
### User sets compression level ###
###################################

# Lowest compression: 1 (fastest)
# Highest compression: 9 (slowest)
compression_level="1"

# Input specific r*i*p*f* or "all" for all files
runs=("r8i1p3f1" "r9i1p3f1")

#############################
### Automatic Compression ###
#############################

# Set the output file as a variable
output_file="compression_progress.txt"

# Set script type
script_type="compression"

# Clear progress file without removing
> "$output_file"

# Record the start time
start_time=$(date "+%s")

# Loop through each run
for run in "${runs[@]}"; do

    echo "==========COMPRESSING $run TO LEVEL $compression_level ==========" >> "$output_file"

    # Define path based on run parameter
    if [ "$run" = "all" ]; then
        path="/discover/nobackup/aherron1/CMOR3.3.2/CMIP6/*/*/*/*/*/*/*/*/*/*nc"
    else
        path="/discover/nobackup/aherron1/CMOR3.3.2/CMIP6/*/NASA-GISS/*/*/${run}/*/*/*/*/*nc"
    fi

    # Use an array to store file paths
    files=($path)

    # Loop through each file
    for file in "${files[@]}"; do
        # Print message for each file
        echo "[$(date +"%Y-%m-%d %H:%M:%S")] Compressing: ${file}" >> "$output_file"

        # Uncomment to compress each file with input compression level, with error handling
        ncks -4 -L "$compression_level" -h -O "$file" "$file" >> "$output_file" 2>&1 || echo "Error compressing: $file" >> "$output_file"
    done

    echo "==========FINISHED COMPRESSING $run TO LEVEL $compression_level==========" >> "$output_file"

done


# Send email
details="Compressing: ${runs[@]} to compression level: $compression_level"
python /discover/nobackup/aherron1/automation/send_email.py "$start_time" "$details" "$script_type"
